// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BlazorTabsMenu.Models;

public partial class InformationSchemaColumnContext : DbContext
{
#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
    public InformationSchemaColumnContext(DbContextOptions<InformationSchemaColumnContext> options)
        : base(options)
    {
    }

    public InformationSchemaColumnContext()
    {
    }
#pragma warning restore CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.

    public virtual DbSet<InformationSchemaColumn> InformationSchemaColumns { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        IConfigurationRoot config = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)
            .AddUserSecrets("363d298d-ad40-47c2-85f4-10af1688f7dc")
            .Build();

        string _connectionString = config["ConnectionStrings:DockerDatabase"] ?? throw new InvalidOperationException("Connection string not found.");

        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer(_connectionString);
        }
    }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {

        //modelBuilder
        // .Entity<InformationSchemaColumn>(
        //     eb =>
        //     {
        //         eb.HasNoKey();
        //         eb.ToView("View_isc");
        //         eb.Property(v => v.BlogName).HasColumnName("Name");
        //     });
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}